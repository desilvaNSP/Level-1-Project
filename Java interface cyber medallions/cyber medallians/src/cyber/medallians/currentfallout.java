/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * currentfallout.java
 *
 * Created on Jul 2, 2012, 12:57:06 AM
 */
package cyber.medallians;

import DBManage.DBManager;
import DBManage.DatabaseConnector;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import resources.ApplyTheme;

/**
 *
 * @author DELL
 */
public class currentfallout extends javax.swing.JFrame {

    DefaultTableModel defaultTableModeljtbCFL;
    String clearedsms;
    String clearedsms1;
    String clearedsms2;
    String clearedsms3;
    ResultSet rsCFL2 = null;
    String meter_no;
    
  
    String meterID;
    String ownerID;
    String name;
    String nic;
    String homeno;
    String homecity;
    String street;
    String hometown;
    String tlpno;
    

    public currentfallout() {
        initComponents();
        setLocationRelativeTo(null);
        defaultTableModeljtbCFL = (DefaultTableModel) jtbCFL.getModel();
        runOnLoad();
    }

    public void runOnLoad() {
        int CFLRowCount = defaultTableModeljtbCFL.getRowCount();
        for (int i = 0; i < CFLRowCount; i++) {
            defaultTableModeljtbCFL.removeRow(0);
        }
        ResultSet rsCFL = null;
        try {
            Connection connection = DatabaseConnector.makeConnection();
            String sqlforCFL = "select CFLID,meter_no,Telephone_no,Datestimes From Currentfallout ";
            rsCFL = DBManager.getData(connection, sqlforCFL);
            while (rsCFL.next()) {
              
                clearedsms=rsCFL.getString("meter_no").replace('C', '0').replace('F', '0').replace('L', '0');
                StringTokenizer tokenizer=new StringTokenizer(clearedsms, " ");
                while (tokenizer.hasMoreTokens()) {
                    clearedsms=tokenizer.nextToken();
                    clearedsms=tokenizer.nextToken();
                    
                }
                Object raw1[] = {rsCFL.getString("CFLID"), clearedsms, rsCFL.getString("Telephone_no"), rsCFL.getString("Datestimes")};
                defaultTableModeljtbCFL.addRow(raw1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(currentfallout.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(currentfallout.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbCFL = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        btRefresh = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtaCFO = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Current Fall Out [Ceylon Electricity Board]");

        jtbCFL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "CFLID", "Meter no", "Phone Number", "Date/Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbCFL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbCFLMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbCFL);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel1.setText("Current Fall Out");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel2.setText("Information about Current fall Out.......");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(167, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
        );

        jPanel4.setBounds(0, 0, 690, 280);
        jLayeredPane1.add(jPanel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton3.setText("Remove");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btRefresh.setText("Refresh");
        btRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRefreshActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btRefresh)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                .addGap(7, 7, 7))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btRefresh)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel1.setBounds(599, 305, 90, 180);
        jLayeredPane1.add(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jtaCFO.setBackground(new java.awt.Color(204, 255, 255));
        jtaCFO.setColumns(20);
        jtaCFO.setForeground(new java.awt.Color(204, 0, 204));
        jtaCFO.setRows(5);
        jtaCFO.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane2.setViewportView(jtaCFO);

        jScrollPane2.setBounds(10, 290, 580, 240);
        jLayeredPane1.add(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRefreshActionPerformed
    try {

        int rsCFL3 = 0;
        int rsCFL4 = 0;
        Connection connection = DatabaseConnector.makeConnection();
        String sqlforCFL2 = "select id,sms_text,sender_number,sent_dt from sms_in where sms_text like 'CFL%'";
        rsCFL2 = DBManager.getData(connection, sqlforCFL2);
        while (rsCFL2.next()) {
            System.out.println(rsCFL2.getString("id"));
            //clearedsms = rsCFL2.getString("sms_text");
            // clearedsms=clearedsms.replace('C', '0').replace('F', '0').replace('L', '0');
            System.out.println(rsCFL2.getString("sms_text"));
            System.out.println(rsCFL2.getString("sender_number"));
            System.out.println(rsCFL2.getString("sent_dt"));
            
            
            ////////////////////
           clearedsms1=rsCFL2.getString("sms_text").replace('C', '0').replace('F', '0').replace('L', '0');
                StringTokenizer tokenizer=new StringTokenizer(clearedsms1, " ");
                while (tokenizer.hasMoreTokens()) {
                    clearedsms1=tokenizer.nextToken();
                    clearedsms1=tokenizer.nextToken();
                    
                }
           
            
           ////////////////////

            Object raw2[] = {rsCFL2.getString("id"),clearedsms1, rsCFL2.getString("sender_number"), rsCFL2.getString("sent_dt")};
            defaultTableModeljtbCFL.addRow(raw2);

            String sqlInsertCFL = "insert into currentfallout(CFLID,meter_no,telephone_no,datestimes) values('" + rsCFL2.getString("id") + "','" + rsCFL2.getString("sms_text") + "','" + rsCFL2.getString("sender_number") + "','" + rsCFL2.getString("sent_dt") + "') ";
            rsCFL3 = DBManager.SendData(connection, sqlInsertCFL);

            String sqlDelete = "delete from sms_in where sms_text like 'CFL%'";
            rsCFL4 = DBManager.SendData(connection, sqlDelete);
        }
    } catch (SQLException ex) {
        Logger.getLogger(currentfallout.class.getName()).log(Level.SEVERE, null, ex);
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(currentfallout.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_btRefreshActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            int selectedRaw1 = jtbCFL.getSelectedRow();
            String ft = jtbCFL.getName();

                    String CFLID = (String) defaultTableModeljtbCFL.getValueAt(selectedRaw1, 0);
                    String selectedmeterno = (String) defaultTableModeljtbCFL.getValueAt(selectedRaw1, 1);
                    String selectedPhone_number = (String) defaultTableModeljtbCFL.getValueAt(selectedRaw1, 2);
                    String selecteDatesTimes = (String) defaultTableModeljtbCFL.getValueAt(selectedRaw1, 3);
                    
                    System.out.println(selecteDatesTimes);
                    System.out.println(CFLID);
                    System.out.println(selectedPhone_number);
                    System.out.println(selectedmeterno);
                    
                    int rsdelete=0;
                    
                    Connection connection = DatabaseConnector.makeConnection();
                    String SQlforDeleteraw = "delete from CurrentfallOut where CFLID ='"+CFLID+"'";
                    rsdelete = DBManager.SendData(connection,SQlforDeleteraw);
                    
                    if(rsdelete>0){
                    
                    JOptionPane.showMessageDialog(rootPane, "Remove The Data Froom The Database \n Deleted CFLID  :  "+CFLID+"\n Meter No :  "+selectedmeterno);
                    }
                    
                    
        defaultTableModeljtbCFL.removeRow(selectedRaw1);
        } catch (SQLException ex) {
            Logger.getLogger(currentfallout.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(currentfallout.class.getName()).log(Level.SEVERE, null, ex);
        }

}//GEN-LAST:event_jButton3ActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    this.setVisible(false);
    MainWindow mainWindow = new MainWindow();
//mainWindow.setVisible(true);
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    System.exit(0);
}//GEN-LAST:event_jButton2ActionPerformed

private void jtbCFLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbCFLMouseClicked
        try {
            int selectedRaw = jtbCFL.getSelectedRow();
            String ft = jtbCFL.getName();

            String CFLID = (String) defaultTableModeljtbCFL.getValueAt(selectedRaw, 0);
            String selectedmeterno = (String) defaultTableModeljtbCFL.getValueAt(selectedRaw, 1);
            String selectedPhone_number = (String) defaultTableModeljtbCFL.getValueAt(selectedRaw, 2);
            String selecteDatesTimes = (String) defaultTableModeljtbCFL.getValueAt(selectedRaw, 3);
            System.out.println(selectedRaw);
            //System.out.println(ft);
            System.out.println(CFLID);
            System.out.println(selectedmeterno);
            System.out.println(selectedPhone_number);
            System.out.println(selecteDatesTimes);
            
            ////////////////////////
            
             clearedsms2=selecteDatesTimes;
                StringTokenizer tokenizer=new StringTokenizer(clearedsms2, " ");
                while (tokenizer.hasMoreTokens()) {
                    clearedsms2=tokenizer.nextToken();
                    //clearedsms2=tokenizer.nextToken();
                    
                }
             clearedsms3=selecteDatesTimes;
                StringTokenizer tokenizer1=new StringTokenizer(clearedsms3, " ");
                while (tokenizer1.hasMoreTokens()) {
                    clearedsms3=tokenizer1.nextToken();
                   clearedsms3=tokenizer1.nextToken();
                    
                }
                
                System.out.println(clearedsms2);
                System.out.println(clearedsms3);
            /////////////////////////
            
            ResultSet rsdetails1=null;
            ResultSet rsdetails2=null;
            
           Connection  connection= DatabaseConnector.makeConnection();
           String Sqlfordetails1="select owner_id,meter_id,meter_no from meter where meter_no='"+ selectedmeterno +"'";
           rsdetails1=DBManager.getData(connection, Sqlfordetails1);
           while(rsdetails1.next()){
                         meterID=rsdetails1.getString("meter_id");
                         ownerID=rsdetails1.getString("owner_id");
                         
            
           }
           String Sqlfordetails2="select c.owner_id,c.name,c.nic,c.homeno,c.street,c.hometown,c.maincity from consumer as c where owner_id='"+ ownerID +"'";
           rsdetails2=DBManager.getData(connection, Sqlfordetails2);
           while(rsdetails2.next()){
                         name=rsdetails2.getString("c.name");
                         nic=rsdetails2.getString("c.nic");
                         homeno=rsdetails2.getString("c.homeno");
                         street=rsdetails2.getString("c.street");
                         hometown=rsdetails2.getString("c.hometown");
                         homecity=rsdetails2.getString("c.maincity");
                        // tlpno=rsdetails2.getString("c.tlpno");
            
           }
          System.out.println(meterID);
          System.out.println(ownerID);
          System.out.println(name);
          System.out.println(nic);
          System.out.println(homeno);
          System.out.println(street);
          System.out.println(hometown);
          System.out.println(homecity);
          
          
          jtaCFO.setText("           Current Fall Out      \n Owner ID   : "+ownerID+"\n Meter ID   : "+meterID+"\n Meter No   : "+selectedmeterno+"\n \n Customer Name \t\t\t:"+name+"\n National Identity Card Number :"+nic+"\n Address :  "+homeno+"\n\t   "+street+"\n\t   "+hometown+"\n\t   "+homecity+"\n\n\t\t date :  " +clearedsms3+ "       time:  "+clearedsms2);       

            
           
            //jtaCFO.setText(selectedPhone_number +" this is a phone number of customer");
        } catch (SQLException ex) {
            Logger.getLogger(currentfallout.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(currentfallout.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_jtbCFLMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(currentfallout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(currentfallout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(currentfallout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(currentfallout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                ApplyTheme.Theme();
                new currentfallout().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btRefresh;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jtaCFO;
    private javax.swing.JTable jtbCFL;
    // End of variables declaration//GEN-END:variables
}
